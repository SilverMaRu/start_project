{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\Star.js"],"names":["cc","Class","extends","Component","properties","spawnClampRectNodePath","spawnClampRectNode","default","type","Node","_spawnClampRectNode","get","find","_spawnClampRect","resultRect","rect","Vec2","ZERO","v2","x","y","width","height","console","log","spawnCenterNodePath","spawnCenterNode","_spawnCenterNode","_spawnCenter","resultV2","position","spawnRect","hollowRect","baseLifeTime","randomRange","_lifeTime","_timeCount","isTimeout","onLoad","initPosition","Math","range","update","dt","lifeTimeOut","node","opacity","lerpInt","onDestroy","event","Event","EventCustom","setUserData","dispatchEvent","offsetX_0","offsetX_1","offsetY_0","offsetY_1","offsetX","random01","offsetY","minX","maxX","finalX","clamp","minY","maxY","finalY","destroy"],"mappings":"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","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        spawnClampRectNodePath: \"\",\r\n        spawnClampRectNode: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        _spawnClampRectNode:{\r\n            get(){\r\n                if(this.spawnClampRectNode == null){\r\n                    this.spawnClampRectNode = cc.find(this.spawnClampRectNodePath);\r\n                }\r\n                return this.spawnClampRectNode;\r\n            },\r\n        },\r\n        _spawnClampRect: {\r\n            get(){\r\n                var resultRect = cc.rect(cc.Vec2.ZERO, cc.v2(1920, 1080));\r\n                if(this._spawnClampRectNode){\r\n                    resultRect = cc.rect(this._spawnClampRectNode.x, this._spawnClampRectNode.y, this._spawnClampRectNode.width, this._spawnClampRectNode.height);\r\n                }\r\n                console.log(resultRect);\r\n                return resultRect;\r\n            },\r\n        },\r\n        spawnCenterNodePath: \"\",\r\n        spawnCenterNode: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        _spawnCenterNode:{\r\n            get(){\r\n                if(!this.spawnCenterNode){\r\n                    this.spawnCenterNode = cc.find(this.spawnCenterNodePath);\r\n                }\r\n                return this.spawnCenterNode;\r\n            },\r\n        },\r\n        _spawnCenter: {\r\n            get(){\r\n                var resultV2 = cc.Vec2.ZERO;\r\n                if(this._spawnCenterNode){\r\n                    resultV2 = this._spawnCenterNode.position;\r\n                }\r\n                return resultV2;\r\n            }\r\n        },\r\n        spawnRect: cc.rect(0, 0, 400, 200),\r\n        hollowRect: cc.rect(0,0,0,0),\r\n        baseLifeTime: 4.5,\r\n        randomRange: cc.v2(-1, 0.5),\r\n        _lifeTime: 0,\r\n        _timeCount: 0,\r\n        isTimeout: {\r\n            get(){\r\n                return this._timeCount > this._lifeTime;\r\n            },\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.initPosition();\r\n        this._lifeTime = this.baseLifeTime + Math.range(this.randomRange.x, this.randomRange.y);\r\n        this._timeCount = 0;\r\n    },\r\n\r\n    // start () {\r\n    // },\r\n\r\n    update (dt) {\r\n        if(this.isTimeout){\r\n            this.lifeTimeOut();\r\n        }\r\n        else{\r\n            this.node.opacity = Math.lerpInt(255, 0, this._timeCount / this._lifeTime);\r\n            this._timeCount += dt;\r\n        }\r\n    },\r\n\r\n    onDestroy(){\r\n        var event = new cc.Event.EventCustom(\"StarDestroy\", true);\r\n        event.setUserData({\r\n            isTimeout: this.isTimeout,\r\n        });\r\n        this.node.dispatchEvent(event);\r\n    },\r\n\r\n    initPosition(){\r\n        var offsetX_0 = this.spawnRect.x + Math.range(-this.spawnRect.width * 0.5, this.hollowRect.x - this.hollowRect.width * 0.5);\r\n        var offsetX_1 = this.spawnRect.x + Math.range(this.hollowRect.x + this.hollowRect.width * 0.5, this.spawnRect.width * 0.5);\r\n\r\n        var offsetY_0 = this.spawnRect.y + Math.range(-this.spawnRect.height * 0.5, this.hollowRect.y - this.hollowRect.height * 0.5);\r\n        var offsetY_1 = this.spawnRect.y + Math.range(this.hollowRect.y + this.hollowRect.height * 0.5, this.spawnRect.height * 0.5);\r\n\r\n        var offsetX = [offsetX_0, offsetX_1][Math.random01()];\r\n        var offsetY = [offsetY_0, offsetY_1][Math.random01()];\r\n        \r\n        var minX = this._spawnClampRect.x - this._spawnClampRect.width * 0.5;\r\n        var maxX = this._spawnClampRect.x + this._spawnClampRect.width * 0.5;\r\n        var finalX = this._spawnCenter.x + offsetX;\r\n        if(finalX < minX || finalX > maxX){\r\n            finalX = this._spawnCenter - offsetX;\r\n        }\r\n        finalX = Math.clamp(finalX, minX, maxX);\r\n\r\n        var minY = this._spawnClampRect.y - this._spawnClampRect.height * 0.5;\r\n        var maxY = this._spawnClampRect.y + this._spawnClampRect.height * 0.5;\r\n        var finalY = this._spawnCenter.y + offsetY;\r\n        if(finalY < minY || finalY > maxY){\r\n            finalY = this._spawnCenter.y - offsetY;\r\n        }\r\n        finalY = Math.clamp(finalY, minY, maxY);\r\n\r\n        this.node.position = cc.v2(finalX, finalY);\r\n    },\r\n\r\n    lifeTimeOut(){\r\n        // this.node.emit(\"lifeTimeOut\");\r\n        this.node.destroy();\r\n    },\r\n});\r\n"]}